name: update-go-version

on:
  workflow_dispatch: {}
  schedule:
    - cron: "0 0 * * MON"

permissions:
  packages: write
  contents: write
  pull-requests: write
  id-token: write

jobs:
  update-go-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: configure system
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          gh auth login --with-token < <(echo ${{ secrets.GITHUB_TOKEN }})
          gh auth status
      - id: setup-go
        uses: actions/setup-go@v4
        with:
          go-version: stable
      - id: run-info
        name: collect job run info
        run: |
          VERSION="$(echo ${{ steps.setup-go.outputs.go-version }} | grep -Eo --color=never '([0-9].[0-9]{2})')"
          echo "go-version=$VERSION" >> $GITHUB_OUTPUT
      - name: edit Go version to latest
        run: |
          go mod edit -go=${{ steps.run-info.outputs.go-version }}
      - name: commit and push if there are changes
        run: |
          if { git ls-files --others --exclude-standard ; git diff-index --name-only --diff-filter=d HEAD ; } | grep go.mod; then
              echo changes detected
            else
              exit 0
          fi
          EXISTING_PR="$(gh pr list --json title,labels,body --jq '.' --label update-go-version --search "Update Go version to ${{ steps.run-info.outputs.go-version }}" | jq -r .[].title)"
          if [ -n "${EXISTING_PR" = "Update Go version to ${{ steps.run-info.outputs.go-version }}" ]; then
            echo "PR already exists"
            exit 0
          fi

          TIMESTAMP="$(date +%Y-%m-%d-%H-%M)"
          NEW_BRANCH="update-go-version-to-${{ steps.run-info-outputs.go-version }}-${TIMESTAMP}"
          git add ./go.mod
          git branch "${NEW_BRANCH}"
          git checkout "${NEW_BRANCH}"
          git commit -s -m "update Go version to ${{ steps.run-info.outputs.go-version }}"
          git push origin "${NEW_BRANCH}"
          gh pr create --title "Update Go version to ${{ steps.run-info.outputs.go-version }}" --body "Updates the base version of Go required for this project to ${{ steps.run-info.outputs.go-version }}" --label update-go-version
